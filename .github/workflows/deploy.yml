name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ttsa-web:latest

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_DROPLET_IP }}
          username: ${{ secrets.DIGITALOCEAN_DROPLET_USERNAME }}
          password: ${{ secrets.DIGITALOCEAN_DROPLET_PASSWORD }}
          debug: true
          script: |
            # Pull the latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ttsa-web:latest

            # Stop and remove the existing container if it exists
            docker stop ttsa-web || true
            docker rm ttsa-web || true

            # Run the new container
            docker run -d \
              --name ttsa-web \
              --restart unless-stopped \
              -p 90:80 \
              ${{ secrets.DOCKERHUB_USERNAME }}/ttsa-web:latest

            # Clean up old images
            docker image prune -f